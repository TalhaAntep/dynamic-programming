<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8824eaed-9122-4398-8050-a8599f530017" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dp project 2.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/src/Main.java" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2fmzGYU6hQzYwJuopoaqfiihCtW" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8824eaed-9122-4398-8050-a8599f530017" name="Changes" comment="" />
      <created>1714420948869</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1714420948869</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.IndexOutOfBoundsException" package="java.lang" />
          <option name="timeStamp" value="3" />
        </breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.StackOverflowError" package="java.lang" />
          <option name="timeStamp" value="30" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="value" />
      </pinned-members>
    </pin-to-top-manager>
    <watches-manager>
      <configuration name="Application">
        <watch expression="((HashMap.Node)((HashMap)CityTourOptimizer.map.graph).entrySet().toArray()[3]).getKey()" custom="java.util.HashMap.Node,java.util.HashMap" />
        <watch expression="path" />
        <watch expression="((Landmark)((HashMap.Node)((HashMap)path).entrySet().toArray()[1]).getValue()).name" custom="java.util.HashMap.Node,Landmark,java.util.HashMap" />
        <watch expression="((HashMap.Node)((HashMap)path).entrySet().toArray()[0]).getValue()" custom="java.util.HashMap.Node,java.util.HashMap" />
        <watch expression="allRoutes.get(0).get(1)" />
      </configuration>
    </watches-manager>
  </component>
</project>